{"version":3,"sources":["webpack:///./src/components/MendeleevTable/index.js","webpack:///./src/components/Element/index.js","webpack:///./src/pages/index.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["Table","elements","className","styles","tableContainer","map","value","node","id","periodicalNumber","symbol","relativeAtomicWeight","stableOxidationState","rusName","engName","color","hexColor","group","period","atomicRadius","radioactivity","isSemimetal","includes","Number","isSemimetalCheck","isRadioactive","Boolean","isInversedColor","isLantanoid","isActinoid","weight","getRelativeAtomicWeight","oxidState","groupGap","periodGap","xPos","yPos","getPosition","key","mainName","secondaryName","atomicRadiusToSize","width","height","Element","classNames","elementContainer","lanthanum","actinium","cerium","thorium","semimetal","style","backgroundColor","gridColumn","gridRow","main","details","weightRow","oxidationState","names","inversedColor","radioactive","query","edges","data","allPeriodicalTableJson","MendeleevTable","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","global","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","String","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","l","parseInt","that","this","valueOf","keys","split","j","constructor"],"mappings":"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","file":"component---src-pages-index-js-b493eacc4e8b5ef0cb00.js","sourcesContent":["import React from \"react\"\n\nimport { Element } from \"../\"\nimport styles from \"./table.module.scss\"\n\nconst getOxidState = value => {\n  if (value === \"-\") {\n    return 0\n  } else {\n    const numVal = value * 1\n    return numVal > 0 ? `+${value}` : value\n  }\n}\n\nconst getPosition = ({\n  isLantanoid,\n  isActinoid,\n  periodicalNumber,\n  group,\n  period,\n}) => {\n  const groupGap = isLantanoid\n    ? Number(periodicalNumber) - 57\n    : isActinoid\n    ? Number(periodicalNumber) - 89\n    : 0\n  const periodGap = Number(isLantanoid || isActinoid) * 3\n  return {\n    xPos: Number(group) + groupGap,\n    yPos: Number(period) + periodGap,\n  }\n}\n\nconst isSemimetalCheck = periodicalNumber => {\n  return [5, 14, 32, 33, 51, 52, 84, 85].includes(Number(periodicalNumber))\n}\n\nconst getRelativeAtomicWeight = weight => {\n  return Number(weight) % 1 ? weight : `[${weight}]`\n}\n\nconst Table = ({ elements }) => {\n  return (\n    <div className={styles.tableContainer}>\n      {elements &&\n        elements.map(\n          ({\n            node: {\n              id,\n              periodicalNumber,\n              symbol,\n              relativeAtomicWeight,\n              stableOxidationState,\n              rusName,\n              engName,\n              color,\n              hexColor,\n              group,\n              period,\n\t\t\t\t\t\t\tatomicRadius,\n\t\t\t\t\t\t\tradioactivity\n            },\n          }) => {\n            const isSemimetal = isSemimetalCheck(periodicalNumber)\n            const isRadioactive = Boolean(Number(radioactivity))\n            const isInversedColor = Number(color) === 2\n            const isLantanoid = periodicalNumber >= 58 && periodicalNumber <= 71\n            const isActinoid = periodicalNumber >= 90 && periodicalNumber <= 103\n            const weight = getRelativeAtomicWeight(relativeAtomicWeight)\n            const oxidState = getOxidState(stableOxidationState)\n            const { xPos, yPos } = getPosition({\n              isLantanoid,\n              isActinoid,\n              periodicalNumber,\n              group,\n              period,\n            })\n            return (\n              <Element\n                key={id}\n                periodicalNumber={periodicalNumber}\n                xPos={xPos}\n                yPos={yPos}\n                symbol={symbol}\n                mainName={rusName}\n                secondaryName={engName}\n                relativeAtomicWeight={weight}\n                stableOxidationState={oxidState}\n                hexColor={hexColor}\n                atomicRadius={atomicRadius}\n                isSemimetal={isSemimetal}\n                isLantanoid={isLantanoid}\n                isActinoid={isActinoid}\n                isInversedColor={isInversedColor}\n                isRadioactive={isRadioactive}\n              />\n            )\n          }\n        )}\n    </div>\n  )\n}\n\nexport default Table\n","import React from \"react\"\nimport classNames from \"classnames\"\n\nimport styles from \"./element.module.scss\"\n\nconst atomicRadiusToSize = atomicRadius => ({\n  width: `${atomicRadius * 9 || 10}%`,\n  height: `${atomicRadius * 9 || 10}%`,\n})\n\nconst Element = ({\n  periodicalNumber,\n  symbol,\n  mainName,\n  secondaryName,\n  relativeAtomicWeight,\n  xPos,\n  yPos,\n  stableOxidationState,\n  hexColor,\n  atomicRadius,\n  isSemimetal,\n  isRadioactive,\n  isInversedColor,\n}) => {\n  return (\n    <div\n      className={classNames(styles.elementContainer, {\n        [styles.lanthanum]: Number(periodicalNumber) === 57,\n        [styles.actinium]: Number(periodicalNumber) === 89,\n        [styles.cerium]: Number(periodicalNumber) === 58,\n        [styles.thorium]: Number(periodicalNumber) === 90,\n        [styles.semimetal]: isSemimetal,\n      })}\n      style={{\n        backgroundColor: hexColor,\n        gridColumn: xPos,\n        gridRow: yPos,\n      }}\n    >\n      <div className={styles.main}>\n        <span className={styles.symbol}>{symbol}</span>\n        <span className={styles.periodicalNumber}>{periodicalNumber}</span>\n      </div>\n      <div className={styles.details}>\n        <div className={styles.weightRow}>\n          <span className={styles.weight}>{relativeAtomicWeight}</span>\n          <span className={styles.oxidationState}>{stableOxidationState}</span>\n        </div>\n        <div className={styles.names}>\n          <p className={styles.mainName}>{mainName}</p>\n          <p className={styles.secondaryName}>{secondaryName}</p>\n        </div>\n      </div>\n      <div className={classNames(styles.atomicRadius, {\n\t\t\t\t[styles.inversedColor]: isInversedColor\n\t\t\t})} style={atomicRadiusToSize(atomicRadius)}>\n        {isRadioactive && <div className={styles.radioactive}></div>}\n      </div>\n    </div>\n  )\n}\n\nexport default Element\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport { MendeleevTable } from \"../components\"\n\nexport const query = graphql`\n  query {\n    allPeriodicalTableJson {\n      edges {\n        node {\n          id\n          acidBaseProperties\n          allOxidationStates\n          amountInAir\n          amountInSeawater\n          atomicRadius\n          amountInWorld\n          boilC\n          color\n          boilK\n          density\n          discoveredAt\n          electronicConfiguration\n          discoveredBy\n          electronegativity\n          engName\n          firstIonizationPotential\n          group\n          hexColor\n          latName\n          meltC\n          meltK\n          periodicalNumber\n          outerElectronicConfiguration\n          period\n          radioactivity\n          relativeAtomicWeight\n          rusName\n          sort\n          stableOxidationState\n          symbol\n          type\n          videoLink\n        }\n      }\n    }\n  }\n`\n\nexport default ({ data: { allPeriodicalTableJson: { edges } } }) => {\n  return <MendeleevTable elements={edges} />\n}\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}